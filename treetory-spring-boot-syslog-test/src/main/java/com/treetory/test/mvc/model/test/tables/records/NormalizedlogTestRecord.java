/*
 * This file is generated by jOOQ.
 */
package com.treetory.test.mvc.model.test.tables.records;


import com.treetory.test.mvc.model.test.tables.NormalizedlogTest;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormalizedlogTestRecord extends TableRecordImpl<NormalizedlogTestRecord> {

    private static final long serialVersionUID = 418735153;

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.dev_id</code>.
     */
    public void setDevId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.dev_id</code>.
     */
    public ULong getDevId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.dev_class</code>.
     */
    public void setDevClass(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.dev_class</code>.
     */
    public String getDevClass() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.event_class</code>.
     */
    public void setEventClass(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.event_class</code>.
     */
    public String getEventClass() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.event</code>.
     */
    public void setEvent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.event</code>.
     */
    public String getEvent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.org_id</code>.
     */
    public void setOrgId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.org_id</code>.
     */
    public Integer getOrgId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.proxy_id</code>.
     */
    public void setProxyId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.proxy_id</code>.
     */
    public Integer getProxyId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.origin_ip</code>.
     */
    public void setOriginIp(UInteger value) {
        set(8, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.origin_ip</code>.
     */
    public UInteger getOriginIp() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.host_name</code>.
     */
    public void setHostName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.host_name</code>.
     */
    public String getHostName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.interface</code>.
     */
    public void setInterface(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.interface</code>.
     */
    public String getInterface() {
        return (String) get(10);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.protocol_name</code>.
     */
    public void setProtocolName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.protocol_name</code>.
     */
    public String getProtocolName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.protocol_number</code>.
     */
    public void setProtocolNumber(UByte value) {
        set(12, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.protocol_number</code>.
     */
    public UByte getProtocolNumber() {
        return (UByte) get(12);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.service_name</code>.
     */
    public void setServiceName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.service_name</code>.
     */
    public String getServiceName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.s_ip</code>.
     */
    public void setSIp(UInteger value) {
        set(14, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.s_ip</code>.
     */
    public UInteger getSIp() {
        return (UInteger) get(14);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.s_port</code>.
     */
    public void setSPort(UShort value) {
        set(15, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.s_port</code>.
     */
    public UShort getSPort() {
        return (UShort) get(15);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.d_ip</code>.
     */
    public void setDIp(UInteger value) {
        set(16, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.d_ip</code>.
     */
    public UInteger getDIp() {
        return (UInteger) get(16);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.d_port</code>.
     */
    public void setDPort(UShort value) {
        set(17, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.d_port</code>.
     */
    public UShort getDPort() {
        return (UShort) get(17);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.severity</code>.
     */
    public void setSeverity(UShort value) {
        set(18, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.severity</code>.
     */
    public UShort getSeverity() {
        return (UShort) get(18);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.rule_id</code>.
     */
    public void setRuleId(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.rule_id</code>.
     */
    public String getRuleId() {
        return (String) get(19);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.action</code>.
     */
    public void setAction(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.action</code>.
     */
    public String getAction() {
        return (String) get(20);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.sequence</code>.
     */
    public void setSequence(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.sequence</code>.
     */
    public String getSequence() {
        return (String) get(21);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.nat_s_ip</code>.
     */
    public void setNatSIp(UInteger value) {
        set(22, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.nat_s_ip</code>.
     */
    public UInteger getNatSIp() {
        return (UInteger) get(22);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.nat_s_port</code>.
     */
    public void setNatSPort(UShort value) {
        set(23, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.nat_s_port</code>.
     */
    public UShort getNatSPort() {
        return (UShort) get(23);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.nat_d_ip</code>.
     */
    public void setNatDIp(UInteger value) {
        set(24, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.nat_d_ip</code>.
     */
    public UInteger getNatDIp() {
        return (UInteger) get(24);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.nat_d_port</code>.
     */
    public void setNatDPort(UShort value) {
        set(25, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.nat_d_port</code>.
     */
    public UShort getNatDPort() {
        return (UShort) get(25);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.nat_rule</code>.
     */
    public void setNatRule(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.nat_rule</code>.
     */
    public String getNatRule() {
        return (String) get(26);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(27, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(27);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.end_time</code>.
     */
    public void setEndTime(Timestamp value) {
        set(28, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.end_time</code>.
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(28);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.duration</code>.
     */
    public void setDuration(UInteger value) {
        set(29, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.duration</code>.
     */
    public UInteger getDuration() {
        return (UInteger) get(29);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.event_count</code>.
     */
    public void setEventCount(UInteger value) {
        set(30, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.event_count</code>.
     */
    public UInteger getEventCount() {
        return (UInteger) get(30);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.rule_group</code>.
     */
    public void setRuleGroup(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.rule_group</code>.
     */
    public String getRuleGroup() {
        return (String) get(31);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.rule_name</code>.
     */
    public void setRuleName(String value) {
        set(32, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.rule_name</code>.
     */
    public String getRuleName() {
        return (String) get(32);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.signature_name</code>.
     */
    public void setSignatureName(String value) {
        set(33, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.signature_name</code>.
     */
    public String getSignatureName() {
        return (String) get(33);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.mac_addr</code>.
     */
    public void setMacAddr(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.mac_addr</code>.
     */
    public String getMacAddr() {
        return (String) get(34);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.direction</code>.
     */
    public void setDirection(Integer value) {
        set(35, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.direction</code>.
     */
    public Integer getDirection() {
        return (Integer) get(35);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.tx_bytes</code>.
     */
    public void setTxBytes(Integer value) {
        set(36, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.tx_bytes</code>.
     */
    public Integer getTxBytes() {
        return (Integer) get(36);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.rx_bytes</code>.
     */
    public void setRxBytes(Integer value) {
        set(37, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.rx_bytes</code>.
     */
    public Integer getRxBytes() {
        return (Integer) get(37);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.user_name</code>.
     */
    public void setUserName(String value) {
        set(38, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.user_name</code>.
     */
    public String getUserName() {
        return (String) get(38);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.reserved</code>.
     */
    public void setReserved(String value) {
        set(39, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.reserved</code>.
     */
    public String getReserved() {
        return (String) get(39);
    }

    /**
     * Setter for <code>test.NORMALIZEDLOG_TEST.etc</code>.
     */
    public void setEtc(String value) {
        set(40, value);
    }

    /**
     * Getter for <code>test.NORMALIZEDLOG_TEST.etc</code>.
     */
    public String getEtc() {
        return (String) get(40);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NormalizedlogTestRecord
     */
    public NormalizedlogTestRecord() {
        super(NormalizedlogTest.NORMALIZEDLOG_TEST);
    }

    /**
     * Create a detached, initialised NormalizedlogTestRecord
     */
    public NormalizedlogTestRecord(ULong id, Timestamp createTime, ULong devId, String devClass, String eventClass, String event, Integer orgId, Integer proxyId, UInteger originIp, String hostName, String interface_, String protocolName, UByte protocolNumber, String serviceName, UInteger sIp, UShort sPort, UInteger dIp, UShort dPort, UShort severity, String ruleId, String action, String sequence, UInteger natSIp, UShort natSPort, UInteger natDIp, UShort natDPort, String natRule, Timestamp startTime, Timestamp endTime, UInteger duration, UInteger eventCount, String ruleGroup, String ruleName, String signatureName, String macAddr, Integer direction, Integer txBytes, Integer rxBytes, String userName, String reserved, String etc) {
        super(NormalizedlogTest.NORMALIZEDLOG_TEST);

        set(0, id);
        set(1, createTime);
        set(2, devId);
        set(3, devClass);
        set(4, eventClass);
        set(5, event);
        set(6, orgId);
        set(7, proxyId);
        set(8, originIp);
        set(9, hostName);
        set(10, interface_);
        set(11, protocolName);
        set(12, protocolNumber);
        set(13, serviceName);
        set(14, sIp);
        set(15, sPort);
        set(16, dIp);
        set(17, dPort);
        set(18, severity);
        set(19, ruleId);
        set(20, action);
        set(21, sequence);
        set(22, natSIp);
        set(23, natSPort);
        set(24, natDIp);
        set(25, natDPort);
        set(26, natRule);
        set(27, startTime);
        set(28, endTime);
        set(29, duration);
        set(30, eventCount);
        set(31, ruleGroup);
        set(32, ruleName);
        set(33, signatureName);
        set(34, macAddr);
        set(35, direction);
        set(36, txBytes);
        set(37, rxBytes);
        set(38, userName);
        set(39, reserved);
        set(40, etc);
    }
}
